["b","d",["a","c","e"],"b","a","b","a","b",["b","e"],"c","a","b","a",["b","d","e"],"c"]
<!-- Question 1 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">1. What part of MVC design pattern React.js implements ?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q1" value="a"> React is full MVC framework</label></li>
            <li><label><input type="radio" name="q1" value="b"> React handle "view" part </label></li>
            <li><label><input type="radio" name="q1" value="c"> React is "controller" in terms of MVC</label></li>
        </ul>
    </div>
</div>

<!-- Question 2 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">2. What template engine could be used in React?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q2" value="a"> HBS</label></li>
            <li><label><input type="radio" name="q2" value="b"> EJS</label></li>
            <li><label><input type="radio" name="q2" value="c"> XML</label></li>
            <li><label><input type="radio" name="q2" value="d"> In React you shouldn't use any template engine.
                JSX(extension to JS syntax) is used for rendering HTML. </label></li>
        </ul>
    </div>
</div>

<!-- Question 3 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">3. Which of these component lifecycle methods exist in <b>React.js</b>?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="checkbox" name="q3" value="a"> render</label></li>
            <li><label><input type="checkbox" name="q3" value="b"> mounted</label></li>
            <li><label><input type="checkbox" name="q3" value="c"> componentDidMount</label></li>
            <li><label><input type="checkbox" name="q3" value="d"> destroyed</label></li>
            <li><label><input type="checkbox" name="q3" value="e"> shouldComponentUpdate</label></li>
        </ul>
    </div>
</div>

<!-- Question 4 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">4. When props or state were changed does React re-render whole view?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q4" value="a"> Yes. React.js propagate event to whole component tree
                and they call render method.</label></li>
            <li><label><input type="radio" name="q4" value="b"> No. React only re-renders changed part.</label></li>
        </ul>
    </div>
</div>


<!-- Question 5 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">5. What component method should be used for custom logic for reaction on
        changes?
    </div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q5" value="a"> shouldComponentUpdate</label></li>
            <li><label><input type="radio" name="q5" value="b"> getSnapshotBeforeUpdate</label></li>
            <li><label><input type="radio" name="q5" value="c"> componentWillUpdate</label></li>
            <li><label><input type="radio" name="q5" value="d"> componentWillMount</label></li>
        </ul>
    </div>
</div>

<!-- Question 6 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">6. What is the second argument of <b>setState</b> method?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q6" value="a"> properties that should be updated </label></li>
            <li><label><input type="radio" name="q6" value="b"> callback function to get new state </label></li>
            <li><label><input type="radio" name="q6" value="c"> previous state</label></li>
        </ul>
    </div>
</div>

<!-- Question 7 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">6. What attribute is required when rendering list components?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q7" value="a"> key </label></li>
            <li><label><input type="radio" name="q7" value="b"> index </label></li>
            <li><label><input type="radio" name="q7" value="c"> data-index</label></li>
            <li><label><input type="radio" name="q7" value="d"> key</label></li>
        </ul>
    </div>
</div>


<!-- Question 8 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">8. Will following code work in <b>React</b> for handling click events?</div>
    <pre class="code javascript" lang="xml">&#x3C;button onclick=&#x22;deleteUser()&#x22;&#x3E;
Delete user
&#x3C;/button&#x3E;</pre>

    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q8" value="a"> Yes. It's correct React.js syntax for handling click
                events.</label></li>
            <li><label><input type="radio" name="q8" value="b"> No. React use slightly different syntax: <b>onClick={activateLasers}</b></label>
            </li>
        </ul>
    </div>
</div>

<!-- Question 9 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">9. Which of these statements regarding <b>props</b> is true?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="checkbox" name="q9" value="a"> you can't pass object via props</label></li>
            <li><label><input type="checkbox" name="q9" value="b"> props are read-only</label></li>
            <li><label><input type="checkbox" name="q9" value="c"> React automatically check whether required props
                passed</label></li>
            <li><label><input type="checkbox" name="q9" value="d"> child component inherits parent component
                props</label></li>
            <li><label><input type="checkbox" name="q9" value="e"> componentWillReceiveProps method is
                deprecated</label></li>
        </ul>
    </div>
</div>

<!-- Question 10 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">10. What is <b>React.PureComponent</b>?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q10" value="a"> it's base class of all React components</label></li>
            <li><label><input type="radio" name="q10" value="b"> React.PureComponent is component that doesn't have
                render method</label></li>
            <li><label><input type="radio" name="q10" value="c"> React.PureComponent is almost the same as
                React.Component. Main difference is thar first doesn't implement shouldComponentUpdate() method</label>
            </li>
        </ul>
    </div>
</div>
<!-- Question 11 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">11. Which method of any <b>React</b> component invoked first?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q11" value="a"> constructor</label></li>
            <li><label><input type="radio" name="q11" value="b"> componentWillMount</label></li>
            <li><label><input type="radio" name="q11" value="c"> componentDidMount</label></li>
            <li><label><input type="radio" name="q11" value="d"> render</label></li>

        </ul>
    </div>
</div>

<!-- Question 12 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">12. What is lifting state up?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q12" value="a"> Updating parent element props.</label></li>
            <li><label><input type="radio" name="q12" value="b"> Process of lifting component state changes to closest
                common ancestor to update needed components.</label></li>
            <li><label><input type="radio" name="q12" value="c"> Updating state of child components</label></li>

        </ul>
    </div>
</div>

<!-- Question 13 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">13. How create React component without extending <b>React.Component</b> class?
    </div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q13" value="a"> Using ReactDOM.render method</label></li>
            <li><label><input type="radio" name="q13" value="b"> It's impossible. All React components should extend
                React.Component </label></li>
            <li><label><input type="radio" name="q13" value="c"> Using React.createElement</label></li>

        </ul>
    </div>
</div>

<!-- Question 14 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">14. What facts about <b>Flux</b> is true?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="checkbox" name="q14" value="a"> Flux is part of React</label></li>
            <li><label><input type="checkbox" name="q14" value="b"> Flux is application architecture that complements
                React and the concept of Unidirectional Data Flow</label></li>
            <li><label><input type="checkbox" name="q14" value="c"> React app can't be write without Flux</label></li>
            <li><label><input type="checkbox" name="q14" value="d"> Redux is most widely used Flux
                implementation</label></li>
            <li><label><input type="checkbox" name="q14" value="e"> Main Flux components are
                Dispatcher,Stores,Views,Actions</label></li>
        </ul>
    </div>
</div>

<!-- Question 15 -->
<div class="card quizlib-question">
    <div class="quizlib-question-title">15. What is props.children?</div>
    <div class="quizlib-question-answers">
        <ul>
            <li><label><input type="radio" name="q15" value="a"> It's key-value store of all props passed to child
                components. </label></li>
            <li><label><input type="radio" name="q15" value="b"> It's variable that contain links to child
                components.</label></li>
            <li><label><input type="radio" name="q15" value="c"> It contains the content between the opening and closing
                tags of a component.</label></li>

        </ul>
    </div>
</div>
